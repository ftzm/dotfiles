;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-flycheck-checker-history buffer-name-history yes-or-no-p-history org-read-date-history face-name-history minibuffer-history woman-topic-history evil-ex-history file-name-history org-refile-history read-expression-history extended-command-history ivy-history))
(setq read-flycheck-checker-history '("python-pylint"))
(setq buffer-name-history '("init.el" "*Customize Face: Warning*"))
(setq yes-or-no-p-history '("yes" "y" "yes" "no"))
(setq org-read-date-history '("   " "                  " "13    " "   " "10    " "   " "10    "))
(setq face-name-history '("all faces"))
(setq minibuffer-history '("ftzm/add-line-below" "last-macro" "f" "Default" "org"))
(setq evil-ex-history '(#("%s/data/DATA" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("%s/conn/CONN/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("%s/port/PORT/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("%s/host/HOST/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("'<,'>s/projectile/flycheck/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("fs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("'<,'>s/persp/org/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("w" 0 1 (ex-index 1)) #("'<,'>s/my-/ftzm\\/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("w" 0 1 (ex-index 1)) #("'<,'>s/my-/ftzm\\//" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("w" 0 1 (ex-index 1)) #("'<,'>s/file/projectile/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24)) #("w" 0 1 (ex-index 1)) #("'<,'>s//file" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("'<,'>s/buffer/file/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20)) #("'<,'>s/window/buffer/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("'<,'>s/evil-mode-map/window-map/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33)) #("'<,'>s/persp/evil/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19)) #("w" 0 1 (ex-index 1))))
(setq file-name-history '(#("/home/matt/emacs_time_func" 0 26 (ivy-index 0)) #("/home/matt/dev/for_tempo/echo_server.py" 0 39 (ivy-index 0)) #("/home/matt/dev/for_tempo/" 0 25 (ivy-index 0)) #("/home/matt/dev/hnefatafl/TAGS" 0 29 (ivy-index 0)) #("/home/matt/dev/hnefatafl/src/BasicAI.hs" 0 39 (ivy-index 0)) #("/home/matt/.spacemacs" 0 21 (ivy-index 1)) #("/home/matt/dot/emacs/.emacs.d/init.el" 0 37 (ivy-index 0)) #("/home/matt/emulating_unimpaired" 0 31 (ivy-index 0)) #("/home/matt/.config/polybar/config" 0 33 (ivy-index 0)) #("/home/matt/bin/my_dmenu.sh" 0 26 (ivy-index 0)) #("/home/matt/.emacs.d/init.el" 0 27 (ivy-index 0)) #("/home/matt/org/refile.org" 0 25 (ivy-index 0)) #("/home/matt/org/tasks.org" 0 24 (ivy-index 0)) #("/home/matt/iit" 0 14 (ivy-index 0)) #("/home/matt/dev/ftzm-blog-docker/ftzm-blog/Dockerfile" 0 52 (ivy-index 0)) #("/home/matt/dev/" 0 15 (ivy-index 0)) #("/home/matt/dev/muscleup/django/core/models.py" 0 45 (ivy-index 0)) #("/home/matt/dev/ftzm-blog-docker/" 0 32 (ivy-index 1)) #("/home/matt/dev/hnefatafl/hnefatafl.org" 0 38 (ivy-index 1)) #("/home/matt/org/music.org" 0 24 (ivy-index 10)) "~/org/tasks.org" "~/org/refile.org" "~/dev/hnefatafl/hnefatafl.org" "~/dev/hnefatafl/TAGS" "~/org/TODOs.org" "~/.emacs.d/bookmarks" "~/dev/muscleup/TODOs.org" "~/dev/hnefatafl/LICENSE" "~/dev/muscleup/LICENSE" "~/dev/muscleup/django/core/forms.py" "~/org/projects.org" "~/org/tasks.org_archive" "~/org/refile.org_archive" "~/.emacs.d/elpa/olivetti-20160912.1758/olivetti-autoloads.el" "~/.emacs.d/elpa/org-plus-contrib-20170210/org-loaddefs.el" "~/.emacs.d/elpa/org-plus-contrib-20170210/org-plus-contrib-autoloads.el" "~/.emacs.d/elpa/ivy-rich-20170227.1745/ivy-rich-autoloads.el" "~/.emacs.d/elpa/org-projectile-20161205.1508/org-projectile-autoloads.el" "~/dev/muscleup/django/core/models.py"))
(setq org-refile-history '("tasks.org/Emacs" "tasks.org/Correspondence" "tasks.org/Emacs" "tasks.org/General" "tasks.org/Packing" "tasks.org/Emacs" "tasks.org/General" "tasks.org/Emacs/Python" "tasks.org/Emacs"))
(setq read-expression-history '("(time-subtract (current-time) (seconds-to-time 86400))" "(format-time-string '%Y' (current-time))" "(format-time-string '%Y' (seconds-to-time 86400))" "(seconds-to-time 86400)" "(time-string (current-time))" "(time-subtract (current-time) ())" "(/ (time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2017-03-10>\" nil))) 86400)" "(/ (time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))) 86400)" "(/ (time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))) 4)" "(time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil)))" "(time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))" "(time-to-days (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil)))" "(time-to-days (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))" "(time-to-days ((time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))))" "(time-to-days ((time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil)))" "(time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))" "(time-since (org-read-date nil t \"<2015-11-06>\" nil))" "(time-since '(22077 11748))" "(time-since '((org-read-date nil t \"<2015-11-06>\" nil)))" "(time-since '(org-read-date nil t \"<2015-11-06>\" nil))" "(date-leap-year-p '(22077 11748))" "(org-read-date nil t \"<2015-11-06>\" nil)" "(date-leap-year-p '(org-read-date nil t \"<2015-11-06>\" nil))" "(date-leap-year-p (org-read-date nil t \"<2015-11-06>\" nil))" "(date-leap-year-p ((org-read-date nil t \"<2015-11-06>\" nil)))" "(org-read-date nil t \"<2015-11-06>\" nil)" "(setq visible-cursor nil)" "(blink-cursor-mode -1)" "(define-key evil-normal-state-map (kbd \"TAB\") 'org-cycle)" "(blink-cursor-mode 0)" "()" "(global-set-key [f10] [?m ?u ?O escape ?g ?t ?m ?u ])" "(global-set-key [f10] [?m ?u ?O escape ?`` ?u ])" "(setq evil-want-fine-undo t)" "(let ((oldpos (point)))
    (end-of-line)
    (newline-and-indent))" "(open-line 1)" "(global-set-key [f10] [?m ?u ?O escape ?`` ?u ])" "(evil-goto-mark ?^)" "(evil-goto-mark \"?\")" "(evil-goto-mark ?^ nil)" "(evil-goto-mark ?^ t)" "(evil-goto-mark ?^)" "(evil-goto-mark ?^ noerror)" "(evil-goto-mark ?^)" "(evil-set-marker ?^ nil t)" "(global-set-key [f10] [?m ?u ?O escape ?\\` ?u])" "(global-set-key [f10] [?m ?u ?O escape ?` ?u])" "(global-set-key [f10] [?m ?u ?O escape ?\\` ?u ])" "(global-set-key [f10] [?m ?u ?O escape ?` ?u ])" "(global-set-key [f10] [?d ?d])" "(setq flycheck-display-errors-delay 0.1)" "(setq evil-mode-cursor-back t)" "(setq company-minimum-prefix-length 0)" "(org-agenda-schedule '(4))" "(org-schedule '(4))" "(org-schedule (4))" "(org-schedule 4)" "'(org-schedule -)" "'(org-schedule (4))" "('org-schedule (4))" "(org-schedule (4))" "(1 'org-schedule)" "(1 org-schedule)" "(- org schedule)" "(evil-define-key 'normal org-capture-mode-map \"k\" 'org-capture-kill)" "(evil-define-key 'normal org-capture-mode-map 'org-capture-kill)" "(setq ivy-count-format \"(%d/%d)\")" "(setq ivy-count-format \"(%d/%d)" "(setq org-refile-use-outline-path 'file)"))
(setq extended-command-history '(#("^" 0 1 (ivy-index 0)) #("^auto fill" 0 10 (ivy-index 0)) #("^persp ki" 0 9 (ivy-index 0)) #("^flyc ne" 0 8 (ivy-index 0)) #("^pa in" 0 6 (ivy-index 0)) #("^smart" 0 6 (ivy-index 0)) #("^powe" 0 5 (ivy-index 0)) #("^sma" 0 4 (ivy-index 0)) #("^pac in" 0 7 (ivy-index 0)) #("^spaceline toggle" 0 17 (ivy-index 28)) #("^spaceline-toggle" 0 17 (ivy-index 3)) #("^eval" 0 5 (ivy-index 0)) #("^persp add" 0 10 (ivy-index 0)) #("^oli" 0 4 (ivy-index 1)) #("^elmac" 0 6 (ivy-index 1)) #("^elm" 0 4 (ivy-index 1)) #("^beginning" 0 10 (ivy-index 4)) #("^add " 0 5 (ivy-index 1)) #("^add" 0 4 (ivy-index 0)) #("^new" 0 4 (ivy-index 0)) #("^begin" 0 6 (ivy-index 0)) #("^whit" 0 5 (ivy-index 0)) #("newline" 0 7 (ivy-index 5)) #("^end" 0 4 (ivy-index 4)) #("^newlin" 0 7 (ivy-index 1)) #("^prev" 0 5 (ivy-index 0)) #("evil norm" 0 9 (ivy-index 2)) #("evil normal" 0 11 (ivy-index 0)) #("^ev" 0 3 (ivy-index 0)) #("eval b" 0 6 (ivy-index 1)) #("^evil open a" 0 12 (ivy-index 0)) #("^evil-op" 0 8 (ivy-index 1)) #("^e" 0 2 (ivy-index 0)) #("eval-buf" 0 8 (ivy-index 0)) #("next line" 0 9 (ivy-index 0)) #("up line" 0 7 (ivy-index 0)) #("^ " 0 2 (ivy-index 0)) #("^evil up" 0 8 (ivy-index 4)) #("^evil-windo" 0 11 (ivy-index 1)) #("^evil-set" 0 9 (ivy-index 0)) #("^inser " 0 7 (ivy-index 6)) #("^name l" 0 7 (ivy-index 0)) #("^elp" 0 4 (ivy-index 0)) #("^pack" 0 5 (ivy-index 0)) #("^ana" 0 4 (ivy-index 0)) #("^flycheck" 0 9 (ivy-index 1)) #("^flych" 0 6 (ivy-index 0)) #("^pa" 0 3 (ivy-index 0)) #("^check par" 0 10 (ivy-index 0)) #("evil end of" 0 11 (ivy-index 1)) #("^evil" 0 5 (ivy-index 0)) #("^evil end line" 0 14 (ivy-index 2)) #("^yaml" 0 5 (ivy-index 0)) #("^persp" 0 6 (ivy-index 0)) #("^eyebro ren" 0 11 (ivy-index 0)) #("^eyebr" 0 6 (ivy-index 2)) #("^per mo" 0 7 (ivy-index 1)) #("^per ad" 0 7 (ivy-index 0)) #("^persp s" 0 8 (ivy-index 1)) #("^persp rem" 0 10 (ivy-index 0)) #("^persp mod" 0 10 (ivy-index 0)) #("^work" 0 5 (ivy-index 0)) #("^spaceline work" 0 15 (ivy-index 0)) #("^wg pre" 0 7 (ivy-index 0)) #("^wg-" 0 4 (ivy-index 16)) #("^wg sw" 0 6 (ivy-index 2)) #("workgroup" 0 9 (ivy-index 4)) #("^wo" 0 3 (ivy-index 0)) #("^workgr" 0 7 (ivy-index 0)) #("^pac ins" 0 8 (ivy-index 0)) #("^persp mode" 0 11 (ivy-index 0)) #("^persp swi" 0 10 (ivy-index 0)) #("^persp ne" 0 9 (ivy-index 0)) #("^persp w" 0 8 (ivy-index 1)) #("^persp pre" 0 10 (ivy-index 0)) #("^eyeb" 0 5 (ivy-index 5)) #("^eyebro conf 3" 0 14 (ivy-index 0)) #("^eyebr sw" 0 9 (ivy-index 3)) #("^eye swi" 0 8 (ivy-index 0)) #("^eyebrow " 0 9 (ivy-index 3)) #("^eyebrows sw" 0 12 (ivy-index 0)) #("^eyebro sw" 0 10 (ivy-index 0)) #("^pe sw" 0 6 (ivy-index 1)) #("^persp " 0 7 (ivy-index 1)) #("^per ki" 0 7 (ivy-index 0)) #("^p" 0 2 (ivy-index 1)) #("persp ne" 0 8 (ivy-index 0)) #("^persp pr" 0 9 (ivy-index 0)) #("comp comp" 0 9 (ivy-index 5)) #("company compl" 0 13 (ivy-index 5)) #("^pack install" 0 13 (ivy-index 0)) #("^pack in" 0 8 (ivy-index 0)) #("^persp k" 0 8 (ivy-index 0)) #("add b" 0 5 (ivy-index 0)) #("^org-agenda- dea" 0 16 (ivy-index 1)) #("^org agenda dea" 0 15 (ivy-index 0)) #("^org todo" 0 9 (ivy-index 3)) #("^org-agenda- " 0 13 (ivy-index 19)) #("^persp kill" 0 11 (ivy-index 1))))
(setq ivy-history '("Default" #("em" 0 2 (ivy-index 0)) "init.el" "Default" "for_tempo" "Default" "Default" #("or" 0 2 (ivy-index 0)) #("hs" 0 2 (ivy-index 0)) "src/BasicAI.hs" #("hn" 0 2 (ivy-index 0)) "org" #("mode line" 0 9 (ivy-index 7)) "Default" "Default" "org" "Default" "org" #("elmac" 0 5 (ivy-index 0)) "f" #("elpy" 0 4 (ivy-index 0)) "Default" "Default" #("o" 0 1 (ivy-index 0)) "for_tempo" "Default" "Default" #("k" 0 1 (ivy-index 0)) "Default" #("yaml-" 0 5 (ivy-index 0)) #("yaml" 0 4 (ivy-index 0)) #("ft" 0 2 (ivy-index 0)) #("k8s" 0 3 (ivy-index 0)) #("de" 0 2 (ivy-index 0)) "Default" "1:Default" "1" #("def" 0 3 (ivy-index 0)) "init.el" "init.el" "emacs" "Default" "Default" "Default" #("ini" 0 3 (ivy-index 0)) "org" "First workgroup" "org" #("workg" 0 5 (ivy-index 1)) "emacs" "Home" "Home" "init.el" "emacs" "Home" #("emacs" 0 5 (ivy-index 0)) "org" #("n" 0 1 (ivy-index 3)) "*Messages*" "Home" "org" #("1" 0 1 (ivy-index 0)) "org" "Home" "org" "Home" #("init" 0 4 (ivy-index 0)) "org" "Home" "Home" #("ta" 0 2 (ivy-index 0)) "Home" "Home" "Home" #("fo" 0 2 (ivy-index 0)) "Home" #("company " 0 8 (ivy-index 0)) #("ho" 0 2 (ivy-index 0)) #("dock" 0 4 (ivy-index 3)) #("ema" 0 3 (ivy-index 0)) #(".hs" 0 3 (ivy-index 0)) "hnefatafl.org" "hnefatafl" "*Org Agenda*" "org" "org" "org" "org" "Home" #("pack" 0 4 (ivy-index 0)) "org" "tasks.org" "init.el" "org" "Home" "hnefatafl" #("bas" 0 3 (ivy-index 0)) #("hnef" 0 4 (ivy-index 0)) "*Org Agenda*" #("space th" 0 8 (ivy-index 1))))
(setq evil-jumps-history 'nil)

;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(which-key-keymap-history counsel-org-agenda-headlines-history org-capture-template-prompt-history::prompt org-capture-template-prompt-history::Title org-agenda-search-history command-history counsel-unicode-char-history tmm--history swiper-history imenu--history-list input-method-history gud-gdb-history compile-history magit-read-file-hist magit-revision-history grep-files-history grep-regexp-history counsel-locate-history org-tags-history counsel-describe-symbol-history info-lookup-history counsel-git-grep-history coding-system-history read-flycheck-checker-history buffer-name-history yes-or-no-p-history org-read-date-history face-name-history minibuffer-history woman-topic-history evil-ex-history file-name-history org-refile-history read-expression-history extended-command-history ivy-history))
(setq which-key-keymap-history '(#("magit" 0 5 (ivy-index 5))))
(setq org-capture-template-prompt-history::prompt '(#("this" 0 4 (ivy-index 0)) #("why" 0 3 (ivy-index 0)) #("dis" 0 3 (ivy-index 0))))
(setq org-capture-template-prompt-history::Title '(#("oioioi" 0 6 (ivy-index 0)) #("trytt" 0 5 (ivy-index 0)) #("try" 0 3 (ivy-index 0)) #("oi" 0 2 (ivy-index 0)) #("dis" 0 3 (ivy-index 0)) #("dees wan" 0 8 (ivy-index 0)) #("title" 0 5 (ivy-index 0)) #("test" 0 4 (ivy-index 0)) #("this" 0 4 (ivy-index 0)) #("testin123" 0 9 (ivy-index 0)) #("test q" 0 6 (ivy-index 0)) #("what guuurrll" 0 13 (ivy-index 0))))
(setq org-agenda-search-history '("+:work: +do" "+:work:" "+:work: +t" "try" ":try: " "try" "work" "try" ":tags:" "start" "pod" "fixed" "+try"))
(setq command-history '((magit-push-current-to-pushremote nil "origin") (evil-change 147 157 'inclusive nil nil) (evil-change 133 143 'inclusive nil nil) (evil-find-char-to nil 47) (evil-yank 21 102 'line nil nil) (evil-yank 2379 2438 'line nil nil) (evil-find-char nil 102) (magit-branch-and-checkout "source-host" "master" nil) (evil-delete 3261 3319 'line nil nil) (evil-delete 2379 2449 'line nil nil) (evil-delete 1929 1987 'line nil nil) (evil-delete 3318 3388 'line nil nil) (eyebrowse-switch-to-window-config 6) (evil-find-char nil 121) (evil-change 1120 1126 'inclusive nil nil) (evil-yank 1120 1210 'line nil nil) (magit-push-current-to-pushremote nil "origin") (evil-change 1217 1232 'inclusive nil nil) (evil-find-char-to nil 47) (evil-change 1204 1212 'inclusive nil nil) (evil-change 1204 1209 'inclusive nil nil) (evil-yank 1129 1194 'line nil nil) (evil-yank 1929 1987 'line nil nil) (evil-change 1971 1975 'inclusive nil nil) (evil-change 1956 1965 'inclusive nil nil) (evil-yank 1880 1929 'line nil nil) (magit-branch-and-checkout "source-host" "master" nil) (magit-checkout "master") (magit-checkout "origin/master") (eyebrowse-switch-to-window-config 2) (evil-replace 2286 2287 'exclusive 51) (evil-replace 2286 2287 'exclusive 54) (evil-replace 2354 2355 'exclusive 51) (evil-replace 2354 2355 'exclusive 53) (eyebrowse-switch-to-window-config 9) (evil-yank 1 71 'line nil nil) (evil-yank 1 2912 'line nil nil) (evil-yank 582 601 'line nil nil) (evil-yank 582 601 'line nil nil) (evil-yank 582 601 'line nil nil) (evil-find-char nil 102) (evil-delete 665 669 'inclusive nil nil) (evil-find-char-to nil 47) (evil-change 5 9 'inclusive nil nil) (evil-replace 2539 2540 'exclusive 45) (avy-goto-char-2 27 27 nil nil nil) (evil-replace 446 447 'exclusive 32) (evil-replace 265 266 'exclusive 45) (yaml-mode) (evil-find-char nil 102) (evil-find-char nil 102) (evil-delete 20380 20416 'line nil nil) (evil-delete 20354 20392 'line nil nil) (evil-change 20367 20370 'exclusive nil nil) (evil-goto-mark-line 27) (evil-change 20367 20372 'inclusive nil nil) (evil-find-char-to nil 116) (evil-find-char-to nil 106) (evil-delete 2582 2609 'line nil nil) (evil-delete 2582 2620 'line nil nil) (evil-delete 2582 2651 'line nil nil) (evil-set-marker 27) (evil-delete 2233 2265 'line nil nil) (evil-delete 272 362 'line nil nil) (evil-delete 272 309 'line nil nil) (evil-record-macro 106) (avy-goto-char-2 100 100 nil nil nil) (evil-record-macro 106) (evil-yank 1 32 'line nil nil) (evil-yank 1 32 'line nil nil) (evil-find-char nil 102) (evil-record-macro 113) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 104) (evil-find-char-to nil 116) (avy-goto-char-2 115 116 nil nil nil) (evil-find-char-to nil 116) (evil-find-char-to nil 116) (evil-find-char-to nil 116) (evil-delete 20250 20333 'line nil nil) (avy-goto-char-2 27 27 nil nil nil) (evil-find-char-to nil 106) (evil-find-char-to nil 104) (magit-branch-and-checkout "fluentd-node" "master" nil) (magit-checkout "master") (magit-show-commit "master" '("--no-ext-diff" "--stat") nil) (copy-file "/home/matt/dev/tempo/dolly/queue_io.org" "/home/matt/org/queue_io.org" 1 nil) (magit-branch-and-checkout "personal-storage" "master" nil) (magit-checkout "origin/master") (magit-checkout "master") (magit-reset "fluentd-sidecar-to-daemonset" nil) (evil-replace 7796 7797 'exclusive 114) (evil-replace 7796 7797 'exclusive 114)))
(setq tmm--history '("h==>Help" "p==>Python" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "p==>Python" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "p==>Python" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "p==>Python" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq swiper-history '(#("page" 0 4 (ivy-index 8))))
(setq gud-gdb-history '("gdb -i=mi "))
(setq magit-revision-history '("master" "origin/master" #("ma" 0 2 (ivy-index 0)) #("maste" 0 5 (ivy-index 0)) #("mas" 0 3 (ivy-index 0)) "fluentd-sidecar-to-daemonset" "verify-resources" "gen-configmaps-secrets" "master" #("mast" 0 4 (ivy-index 0)) "HEAD" "gen-configmaps-secrets" "gen" "master" "master" "muzzle_events_query" "master" #("pro" 0 3 (ivy-index 3)) "master" "tempoc-configmap-defaults" "master" "threaded-image-fetching" #("d" 0 1 (ivy-index 1)) "docker-compose" #("docker_compose" 0 14 (ivy-index 0)) "devel" "datadog-metrics" "master" "datadog-metrics" "jira-datadog" "datadog-metrics" "threaded-image-fetching" #("jir" 0 3 (ivy-index 0)) "threaded-image-fetching" "jira-datadog" "master" #("as" 0 2 (ivy-index 0)) #("datadog" 0 7 (ivy-index 0)) "master" #("datadog-metrics" 0 15 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) "tempoc-python" "tempoc-master" "create-with-kops" #("cluster-admin-missing-secrets-msg" 0 33 (ivy-index 0)) "muzzle"))
(setq grep-regexp-history '("return_code"))
(setq org-tags-history '(#("em" 0 2 (ivy-index 0)) #("ema" 0 3 (ivy-index 0)) #("org" 0 3 (ivy-index 0)) #(":note:emacs:org:" 0 16 (ivy-index 0)) #(":note:this:" 0 11 (ivy-index 0)) #(":work:this:" 0 11 (ivy-index 0)) "work" #("ta" 0 2 (ivy-index 0)) "work" #("te" 0 2 (ivy-index 0)) #("work" 0 4 (ivy-index 0)) "test1" "test1" "tags" #("testint123" 0 10 (ivy-index 0)) #("tags" 0 4 (ivy-index 0)) #("q" 0 1 (ivy-index 0))))
(setq counsel-git-grep-history '(#("sour hos" 0 8 (ivy-index 0)) #("tempo_r" 0 7 (ivy-index 0)) #("DISPATCHER_TAG" 0 14 (ivy-index 12)) #("dispatcher" 0 10 (ivy-index 60)) #("log-storage" 0 11 (ivy-index 1)) #("volumes" 0 7 (ivy-index 9)) #("log collector" 0 13 (ivy-index 1)) #("daemonset" 0 9 (ivy-index 1)) #("log coll" 0 8 (ivy-index 4)) #("configs get" 0 11 (ivy-index 0)) #("print" 0 5 (ivy-index 0)) #("cluster tag" 0 11 (ivy-index 0)) #("DNS for " 0 8 (ivy-index 0)) #("kops state store" 0 16 (ivy-index 14)) #("KOPS state" 0 10 (ivy-index 0)) #("Cluster not re" 0 14 (ivy-index 0)) #("exit" 0 4 (ivy-index 0)) #("name: dash" 0 10 (ivy-index 0)) #("DJANGO" 0 6 (ivy-index 3)) #("k8s" 0 3 (ivy-index 5)) #("dashboar" 0 8 (ivy-index 9)) #("noti" 0 4 (ivy-index 5)) #("dash" 0 4 (ivy-index 2)) #("allow no licen" 0 14 (ivy-index 0)) #("nginx" 0 5 (ivy-index 9)) #("ngin" 0 4 (ivy-index 1)) #("no secre" 0 8 (ivy-index 1)) #("tempo" 0 5 (ivy-index 28)) #("ren" 0 3 (ivy-index 1)) #("prin" 0 4 (ivy-index 1)) #("does not have" 0 13 (ivy-index 0)) #("populate" 0 8 (ivy-index 1)) #("no configs" 0 10 (ivy-index 0)) #("no configs " 0 11 (ivy-index 0)) #("cache" 0 5 (ivy-index 0)) #("class Deploy" 0 12 (ivy-index 2)) #("screen" 0 6 (ivy-index 2)) #("resource_envs/" 0 14 (ivy-index 0)) #("resource" 0 8 (ivy-index 18)) #("provides" 0 8 (ivy-index 0)) #("descriptors" 0 11 (ivy-index 3)) #("linea" 0 5 (ivy-index 0)) #("des" 0 3 (ivy-index 1)) #("configs" 0 7 (ivy-index 0)) #("resource_envs" 0 13 (ivy-index 0)) #("redis" 0 5 (ivy-index 0)) #("x509 " 0 5 (ivy-index 0)) #("x509" 0 4 (ivy-index 0)) #("X509" 0 4 (ivy-index 0)) #("APIB" 0 4 (ivy-index 2)) #("sharea" 0 6 (ivy-index 1)) #("empty " 0 6 (ivy-index 2)) #("resources" 0 9 (ivy-index 0)) #("pro" 0 3 (ivy-index 1)) #("envir" 0 5 (ivy-index 0)) #("environ" 0 7 (ivy-index 0)) #("request" 0 7 (ivy-index 7)) #("provide" 0 7 (ivy-index 1)) #("cont" 0 4 (ivy-index 4)) #("container" 0 9 (ivy-index 2)) #("exi" 0 3 (ivy-index 1)) #("varf" 0 4 (ivy-index 0)) #("requested by" 0 12 (ivy-index 5)) #("con" 0 3 (ivy-index 30)) #("varfil" 0 6 (ivy-index 2)) #("pr" 0 2 (ivy-index 0)) #("varfile" 0 7 (ivy-index 6)) #("rename" 0 6 (ivy-index 3)) #("default" 0 7 (ivy-index 5)) #("session" 0 7 (ivy-index 4)) #("kube_secre" 0 10 (ivy-index 0)) #("passwo" 0 6 (ivy-index 30)) #("create rds" 0 10 (ivy-index 5)) #("schedule" 0 8 (ivy-index 21)) #("side" 0 4 (ivy-index 1)) #("generate_configmap_claims" 0 25 (ivy-index 1)) #("attempt_local_import" 0 20 (ivy-index 0)) #("include in " 0 11 (ivy-index 1)) #("inclu" 0 5 (ivy-index 0)) #("schedule_resource_containers" 0 28 (ivy-index 1)) #("assign" 0 6 (ivy-index 0)) #("create_container_resources " 0 27 (ivy-index 0)) #("next" 0 4 (ivy-index 1)) #("__name__" 0 8 (ivy-index 0)) #("sch" 0 3 (ivy-index 0)) #("resource_creation_hooks" 0 23 (ivy-index 1)) #("schedule_containers" 0 19 (ivy-index 0)) #("capture" 0 7 (ivy-index 0)) #("map" 0 3 (ivy-index 45)) #("captu" 0 5 (ivy-index 12)) #("org " 0 4 (ivy-index 22)) #("buffer keys" 0 11 (ivy-index 0)) #("gen" 0 3 (ivy-index 0)) #("file key" 0 8 (ivy-index 2)) #("gener" 0 5 (ivy-index 0)) #("adv" 0 3 (ivy-index 0)) #("magit" 0 5 (ivy-index 7)) #("which" 0 5 (ivy-index 0)) #("general" 0 7 (ivy-index 0)) #("buffer" 0 6 (ivy-index 5))))
(setq read-flycheck-checker-history '("python-flake8" "python-pylint" "python-pycompile" "python-flake8" #("fl" 0 2 (ivy-index 0)) #("flake" 0 5 (ivy-index 0)) "python-pylint" "python-flake8" "python-pylint" #("pylint" 0 6 (ivy-index 0)) #("flake8" 0 6 (ivy-index 0)) #("flak" 0 4 (ivy-index 0)) "python-pylint" "python-flake8" "python-pylint" #("fla" 0 3 (ivy-index 0)) "puppet-parser" "python-pylint" "lua-luacheck" #("lua" 0 3 (ivy-index 1)) #("pyli" 0 4 (ivy-index 0)) "python-flake8" "python-pylint" "haskell-hlint" "haskell-ghc" "python-pylint"))
(setq buffer-name-history '("*shell*" "local_dispatcher.py" "init.el" "*Customize Face: Warning*"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "ys" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "y" "yes" "no"))
(setq org-read-date-history '("   " "'    " "wed    " "tue    " "mon    " "   " "fri    " "   " "thu    " "wed    " "tue    " "   " "tue    " "   " "sat    " "   " "    " "   " "03    " "    " "today    " "08-01    " "08-08    " "   " "2    " "08-09    " "    " "08-08    " "08-14    " "8    " "12    " "14    " "   " "1    " "9    " "14    " "1    " "      " "27    " "mon    " "   " "r    " "   " "            " "   " "22:30    " "   " "    " "22:30    " "10:00    " "   " "wed    " "   " "23:30    " "23:00    " "23:30    " "21:00    " "22:00    " "10:00    " "23:00    " "   " "               " "   " "13    " "thurs    " "   " "11:00    " "   " "    " "6    " "   " "fri    " "   " "    " "19:30    " "   " "21:30    " "19:30    " "  20:30    " "   " "tue    " "wed    " "   " "sat    " "sa    " "   " "         " "   " "         " "   " "                  " "13    " "   " "10    " "   " "10    "))
(setq face-name-history '(#("defaul" 0 6 (ivy-index 1)) #("defa" 0 4 (ivy-index 1)) "all faces"))
(setq minibuffer-history '("source-host" "fluentd-node" "personal-storage" "verify-resources" "meeting with a" "gen" "how dolly generates env" "On master: post vacay" "ftzm" "reflections on k8s discussion" "conductor catchup" "ftzm" "stina" "stina is so great" "capture" ":work:" "cap" "Adding tags during org capture" "test2" "notes" "org" "notetaking system begun" "test2" "test1" "contentz" "dis" "di" "worktings" "dididid/" "workstuff" "dis" "dis waaan" "last try" "this" "try" "thisandthat" "this" "trying my best--a love story" "test" "whole-line" "whole line" "cc" "change" "last-macro" "ce" "last-macro" "/bin/zsh" "/bin/zshj" "/bin/zsh" "ftzm" "matt" "V1k1ngr!" "fluentd-sidecar-to-daemonset" "muzzle_events_query" "conductor" "tempoc-configmap-defaults" "ftzm" "10" "20" "10" "ftzm" "docker_compose" "/bin/zsh" "ftzm" "V1k1ngr!" "/bin/zsh" "On jira-datadog: " "threaded-image-fetching" "datadog-metrics" "jira-datadog" "ftzm" "matt" "ftzm" "devel" "ftzm" "arni" "pre-mortem" "begin-module" "doit" "take that" "try again" "oi" "trying all the time" "dis" "dick" "try" "oioi" "try" "di" "test meeting" "test" "tempoc-master" "seq" "let-alist" "50" "-50" "-60" "60" "10" "jump"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("16" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("30" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("120" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("'<,'>s/'configs'/vartype/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26)) #("'<,'>s/configs/secrets/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24)) #("w" 0 1 (ex-index 1)) #("'<,'>s/config/secret/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("205" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("115" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("103" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("'<,'>s/config/secret/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("86" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("'<,'>s/config/secret/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("'<,'>s/access_config/access" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("'<,'>s/config/secret/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("'<,'>s" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("87" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("70" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("6" 0 1 (ex-index 1)) #("118" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("29" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("193" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("139" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("139/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("'<,'>s/config/secret/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("'<,'>s/configs/secrets" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("'<,'>s/test/title/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19)) #("'<,'>s" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("%s/-keys//g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("q" 0 1 (ex-index 1)) "w" "wq" "w" #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 181)) #("'<,'>s/container/container_spec/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32)) #("'<,'>s/container/container_specs/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33)) #("150" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("'<,'>s/readiness/liveness/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("%s/EmptyDir/LivenessProbe" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25)) #("20" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("28" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("37" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("121" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("105" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("34" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("85" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("119" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("128" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("239" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("93" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("83" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("121" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("208" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("58" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("'<,'>s/var\\/log/var\\/hostlog" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("276" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("266" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("246" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("242" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("247" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("253" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("242" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("62" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("115" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("67" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("38" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("78" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq file-name-history '(#("/home/matt/dev/tempo/django-base/nginx.conf" 0 43 (ivy-index 0)) #("/home/matt/dev/tempo/dispatcher/syslog-ng.conf" 0 46 (ivy-index 0)) #("/home/matt/td-agent.conf" 0 24 (ivy-index 0)) #("/home/matt/work_urls.org" 0 24 (ivy-index 3)) #("/home/matt/dev/tempo/dolly/cloud-admin/kubernetes/templates/log-collector-daemonset.yaml" 0 88 (ivy-index 0)) #("/home/matt/dev/tempo/dolly/cloud-admin/kubernetes/templates/dd-agent-daemonset.yaml.j2" 0 86 (ivy-index 4)) "/home/matt/dev/tempo/dolly/tempo-world/logs/jobs/development/flunode/failed/gerdur-job-2017-08-16-11:11:32.log" #("/home/matt/org/queue_io.org" 0 27 (ivy-index 0)) #("/home/matt/dev/tempo/dolly/queue_io.org" 0 39 (ivy-index 22)) "/tmp/tmpcw0ndqk3" #("/home/matt/.emacs.d/init.el" 0 27 (ivy-index 0)) #("/home/matt/dev/tempo/tempo_yamls/notification-deployment.yaml" 0 61 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/tempo_conductor/output.txt" 0 57 (ivy-index 0)) #("/home/matt/atreus_layout" 0 24 (ivy-index 0)) #("/home/matt/dev/tempo/tempo_yamls/dashboar-deployment.yaml" 0 57 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/tempo_conductor/varfiles/secrets/dashboar-django" 0 79 (ivy-index 3)) #("/home/matt/dev/conductor+tempo/tempo_conductor/varfiles/" 0 56 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/deployment/minikube.py" 0 82 (ivy-index 0)) #("/home/matt/.xmonad/xmonad.hs" 0 28 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/tempo_conductor/conductor-staging.yaml" 0 69 (ivy-index 7)) "/home/matt/dev/conductor+tempo/tempo_conductor/varfiles/configs/dispatcher-env" #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/empty_dir.py" 0 81 (ivy-index 5)) #("/home/matt/dev/conductor+tempo/tempo_conductor/managers/local_dispatcher.py" 0 75 (ivy-index 5)) #("/home/matt/dev/tempo/tempo_yamls/core-deployment.yaml" 0 53 (ivy-index 2)) #("/home/matt/dev/conductor+tempo/tempo_conductor/descriptors/temposoftware-dashboar:master-2017.05.02-13.25.16-9ecafb4a2abfce2b4d3bd857f67dffaf740d986a" 0 149 (ivy-index 5)) #("/home/matt/dev/conductor+tempo/tempo_conductor/descriptors/temposoftware-belinda:master-2017.05.08-23.31.21-b91a442e279f9788f176b7f05ee892666a9d8377" 0 148 (ivy-index 2)) #("/home/matt/dev/conductor+tempo/conductor/conductor/configuration_manager.py" 0 75 (ivy-index 0)) "/home/matt/.xinitrc" "/home/matt/.xinigrc" #("/home/matt/dev/conductor+tempo/" 0 31 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/config_agent.py" 0 84 (ivy-index 0)) "/home/matt/dev/tempo/tempo_yamls/planner-static-deployment.yaml" "/home/matt/dev/tempo/tempo_yamls/hipchat-deployment.yaml" "/home/matt/dev/tempo/tempo_yamls/core-bg-worker-deployment.yaml" #("/home/matt/dev/tempo/" 0 21 (ivy-index 1)) #("/home/matt/dev/conductor+tempo/tempo_conductor/descriptors/" 0 59 (ivy-index 0)) #("/home/matt/org/main.org" 0 23 (ivy-index 0)) #("/home/matt/.xmonad/" 0 19 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/tempo_conductor/managers/" 0 56 (ivy-index 3)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/env_var_localenv.py" 0 88 (ivy-index 6)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/empty_logging.py" 0 85 (ivy-index 5)) #("/home/matt/dev/conductor+tempo/tempo_conductor/descriptors/temposoftware-jira:master-2017.05.05-03.17.38-6fa9576cb1fb5bdcd57167f92c0d13675c438e25" 0 145 (ivy-index 9)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/varfile.py" 0 79 (ivy-index 2)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/sidecars.py" 0 80 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/probe.py" 0 77 (ivy-index 9)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/local_service.py" 0 85 (ivy-index 8)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/inline_vars.py" 0 83 (ivy-index 7)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/" 0 69 (ivy-index 6)) #("/home/matt/dev/conductor+tempo/tempo_conductor/managers/dashboar_configurator.py" 0 80 (ivy-index 4)) #("/home/matt/dev/conductor+tempo/tempo_conductor/managers/tempo_conf.py" 0 69 (ivy-index 6)) #("/home/matt/org/work.org" 0 23 (ivy-index 0)) #("/home/matt/org/notes.org" 0 24 (ivy-index 0)) #("/home/matt/.dots/emacs/.emacs.d/" 0 32 (ivy-index 0)) #("/home/matt/" 0 11 (ivy-index 0)) #("/home/matt/.dots/" 0 17 (ivy-index 0)) #("/home/matt/.config/" 0 19 (ivy-index 0)) #("/home/matt/org/" 0 15 (ivy-index 0)) #("/home/matt/.emacs.d/" 0 20 (ivy-index 0)) #("/home/matt/.dots/emacs/.emacs.d/elpa/evil-20170306.334/" 0 55 (ivy-index 0)) #("/home/matt/.dots/emacs/.emacs.d/elpa/evil-20170306.334/evil-maps.el" 0 67 (ivy-index 22)) #("/home/matt/.dots/emacs/.emacs.d/elpa/evil-20170306.334/evil-commands.el" 0 71 (ivy-index 6)) #("/home/matt/.dots/emacs/.emacs.d/elpa/evil-20170306.334/evil-states.el" 0 69 (ivy-index 26)) #("/home/matt/bin/emacs_start.sh" 0 29 (ivy-index 0)) #("/home/matt/.zshrc" 0 17 (ivy-index 5)) "/home/matt/file" "/home/matt/.zprofile" "/home/matt/.xinitrc" "/home/matt/test" #("/home/matt/booze_email.org" 0 26 (ivy-index 0)) "/home/matt/.xinitrc" "/home/matt/test" "/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/liveness_probe.py~" "/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/liveness_probe.py" #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/probe.py
liveness_probe.py" 0 95 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/liveness_probe.py" 0 86 (ivy-index 11)) #("/home/matt/dev/tempo/tempo_yamls/jira-deployment.yaml" 0 53 (ivy-index 4)) #("/home/matt/dev/conductor+tempo/tempo_conductor/local_world.yaml" 0 63 (ivy-index 7)) #("/home/matt/dev/tempo/tempo_yamls/" 0 33 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/conductor/conductor/managers/resource/sidecar.py" 0 79 (ivy-index 0)) #("/home/matt/dev/conductor+tempo/conductor/" 0 41 (ivy-index 2)) "/home/matt/.xinitrc" "/home/matt/test" #("/home/matt/that" 0 15 (face ivy-virtual)) "/home/matt/tht" "/home/matt/this" "/home/matt/bin/clever_emacs_start" "/home/matt/that" "/home/matt/this" "/home/matt/bin/open_emacs.sh" "/home/matt/this" "/home/matt/test" "/home/matt/this" "/home/matt/.xinitrc" "/home/matt/bin/emacsframe.sh" "/home/matt/test" "/home/matt/.xinitrc" "/home/matt/.startx" "/home/matt/test" #("/home/matt/dev/tempo/techniques.org" 0 35 (ivy-index 0))))
(setq org-refile-history '(#("main.org/General" 9 16 (fontified nil org-category "main" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) "work.org" #("main.org/Linux" 9 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "main" fontified nil)) #("main.org/General" 9 16 (fontified t org-category "main" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) "main.org/General/" #("main.org/General" 9 16 (fontified t org-category "main" face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) "main.org/General/" #("main.org/General" 9 16 (fontified t org-category "main" face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("work.org/Tasks" 9 14 (fontified nil org-category "work" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("main.org/General" 9 16 (fontified t org-category "main" face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("work.org/Tasks" 9 14 (fontified nil org-category "work" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("tasks.org/Linux" 10 15 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified t)) #("tasks.org/General" 10 17 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified t)) #("work.org/Tasks" 9 14 (fontified nil org-category "work" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("tasks.org/General" 10 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) #("tasks.org/Videotron" 10 15 (fontified t line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks" face org-level-1) 15 19 (fontified t line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks" face org-level-1)) #("tasks.org/Apartment Notes" 10 25 (fontified t line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks" face org-level-1)) #("tasks.org/Wedding" 10 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) #("tasks.org/Linux" 10 15 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified t)) #("tasks.org/Life" 10 14 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified t)) "work.org" #("tasks.org/Emacs" 10 15 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified t)) #("tasks.org/Linux" 10 15 (fontified nil)) #("tasks.org/Emacs" 10 15 (fontified nil)) #("tasks.org/Life" 10 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) #("tasks.org/Emacs" 10 15 (fontified t line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks" face org-level-1)) #("tasks.org/Emacs/Org" 10 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil) 16 19 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) org-category "tasks" fontified nil)) #("tasks.org/Life" 10 14 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("tasks.org/Emacs" 10 15 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("tasks.org/Wedding" 10 17 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("tasks.org/Life" 10 14 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("work.org/tasks" 9 14 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "work")) "work.org" #("tasks.org/Life" 10 14 (fontified nil org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) "work.org" #("tasks.org/Linux" 10 15 (fontified nil org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("work.org/tasks" 9 14 (fontified t org-category "work" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) "work.org" #("tasks.org/Emacs" 10 15 (fontified t org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("tasks.org/Life" 10 14 (fontified t org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("tasks.org/Emacs" 10 15 (fontified t org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("tasks.org/Linux" 10 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) #("tasks.org/Emacs" 10 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) #("tasks.org/Life" 10 14 (fontified nil org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) "work.org" #("tasks.org/Life" 10 14 (fontified nil org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("tasks.org/Emacs" 10 15 (fontified nil org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) "tasks.org/Emacs/" #("tasks.org/Emacs" 10 15 (fontified nil org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("work.org/tasks" 9 14 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "work")) #("tasks.org/Linux" 10 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) #("tasks.org/Emacs" 10 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) "work.org" #("tasks.org/Emacs" 10 15 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("tasks.org/Linux" 10 15 (fontified t line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks" face org-level-1)) #("tasks.org/Emacs" 10 15 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("work.org/tasks" 9 14 (fontified nil org-category "work" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("tasks.org/Emacs" 10 15 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("tasks.org/Linux" 10 15 (fontified t line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks" face org-level-1)) #("tasks.org/Life" 10 14 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("tasks.org/Emacs" 10 15 (fontified t face org-level-1 line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) org-category "tasks")) #("work.org/tasks" 9 14 (fontified nil)) #("tasks.org/Linux" 10 15 (fontified t org-category "tasks" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("work.org/tasks" 9 14 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "work" fontified t)) #("tasks.org/Emacs" 10 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "tasks" fontified nil)) "tasks.org/Emacs/" "tasks.org/Emacs" "work.org/Work/tasks" "tasks.org/Emacs" "work.org/Work/tasks" "work.org/Work/tasks/" "work.org/Work/tasks" "work.org/Work/tasks/" "work.org/Work/tasks" "tasks.org/Work" "tasks.org/Emacs" "tasks.org/Correspondence" "tasks.org/Emacs" "tasks.org/General" "tasks.org/Packing" "tasks.org/Emacs" "tasks.org/General" "tasks.org/Emacs/Python" "tasks.org/Emacs"))
(setq read-expression-history '("org-directory" "(ftzm/var-defaulted 'oioioi \"okkk\")" "oioioi" "(ftzm/var-defaulted 'oioioi \"okkk\")" "variable" "oioioi" "(ftzm/var-defaulted 'oioioi \"okkk\")" "(setq oioioi \"diswan\")" "(ftzm/var-defaulted 'buffer \"okkk\")" "(ftzm/var-defaulted 'oioioi \"okkk\")" "(ftzm/var-defaulted oioioi \"okkk\")" "(ftzm/var-defaulted 'oioioi \"okkk\")" "(ftzm/var-defaulted oioioi \"okkk\")" "(counsel-projectile-find-file test)" "(define-key ivy-minibuffer-map (kbd \"<escape>\") 'minibuffer-keyboard-quit)" "(global-set-key (kbd \"<escape>\") 'keyboard-quit)" "(setq powerline-default-separator 'slant)" "(setq default-text-scale-amount 10)" "(setq default-text-scale-amount 60)" "(setq evil-snipe-scope 'visible)" "(setq evil-snipe-scope 'buffer)" "(replace-regexp-in-string \" \" \"-\" \"da foo is foobared\")" "(replace-regexp-in-string \"fo+\" \"baz\" \"da foo is foobared\")" "(find-file (capture-meeting-file \"~/org/meetings\"))" "(find-file \"~/org/meetings/yermum\")" "(find-file \"~/org/meeting/yermum\")" "(setq line-move-visual t)" "(set-face-background 'fringe \"red\")" "(set-window-fringes nil 0 0)
" "evil-set-jump" "(setq org-agenda-custom-commands '((\"w\" \"List work tasks\" tags-todo \"work\") ))" "(setq org-agenda-custom-commands '((\"w\" \"List work tasks\" agenda \"work\") ))" "(setq org-agenda-custom-commands '((\"w\" \"List work tasks\" tags \"work\") ))" "(org-agenda-filter-by-tag \"work\")" "(setq projectile-completion-system 'ivy)" "(setq projectile-enable-caching nil)" "(counsel-projectile-ag \"test\")" "(counsel-projectile-ag 'test')" "(setq flycheck-python-pylint-executable '/home/mfitzsimmons/dolly/venv/bin/pylint')" "(setq powerline-default-separator 'slant)" "(setq powerline-default-separator 'wave)" "(setq powerline-default-separator 'slant)" "(setq powerline-default-separator 'angle)" "(setq truncate-lines 1)" "truncate-lines" "(setq neo-window-width 38)" "(setq neo-window-width 48)" "(setq neo-theme 'icons)" "(setq tool-bar-mode 1)" "tool-bar-mode" "(setq flycheck-python-pylint-executable \"/home/matt/dolly/venv/bin/pylint\")" "(setq flycheck-python-pylint-executable /home/matt/dolly/venv/bin/pylint)" "(setq flycheck-python-pylint-executable \"/home/matt/dolly/venv/bin/pylint\")" "(setq neo-window-fixed-size nil)" " (setq powerline-default-separator 'slant)" "()" "(write-region \"deees\" nil \"/home/matt/test\" 'append)" "(write-region \"deees\" nil /home/matt/test 'append)" "(format-time-string \"%D\" (time-subtract (current-time) (seconds-to-time (* 3 86400))))" "(format-time-string \"%D\" (time-subtract (current-time) (seconds-to-time 86400)))" "(format-time-string \"%D\" (time-subtract (current-time) (seconds-to-time 86400))" "(time-subtract (current-time) (seconds-to-time 86400))" "(format-time-string '%Y' (current-time))" "(format-time-string '%Y' (seconds-to-time 86400))" "(seconds-to-time 86400)" "(time-string (current-time))" "(time-subtract (current-time) ())" "(/ (time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2017-03-10>\" nil))) 86400)" "(/ (time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))) 86400)" "(/ (time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))) 4)" "(time-to-seconds (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil)))" "(time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))" "(time-to-days (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil)))" "(time-to-days (time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))" "(time-to-days ((time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))))" "(time-to-days ((time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil)))" "(time-subtract (current-time) (org-read-date nil t \"<2015-11-06>\" nil))" "(time-since (org-read-date nil t \"<2015-11-06>\" nil))" "(time-since '(22077 11748))" "(time-since '((org-read-date nil t \"<2015-11-06>\" nil)))" "(time-since '(org-read-date nil t \"<2015-11-06>\" nil))" "(date-leap-year-p '(22077 11748))" "(org-read-date nil t \"<2015-11-06>\" nil)" "(date-leap-year-p '(org-read-date nil t \"<2015-11-06>\" nil))" "(date-leap-year-p (org-read-date nil t \"<2015-11-06>\" nil))" "(date-leap-year-p ((org-read-date nil t \"<2015-11-06>\" nil)))" "(org-read-date nil t \"<2015-11-06>\" nil)" "(setq visible-cursor nil)" "(blink-cursor-mode -1)" "(define-key evil-normal-state-map (kbd \"TAB\") 'org-cycle)" "(blink-cursor-mode 0)" "()" "(global-set-key [f10] [?m ?u ?O escape ?g ?t ?m ?u ])" "(global-set-key [f10] [?m ?u ?O escape ?`` ?u ])" "(setq evil-want-fine-undo t)" "(let ((oldpos (point)))
    (end-of-line)
    (newline-and-indent))" "(open-line 1)" "(global-set-key [f10] [?m ?u ?O escape ?`` ?u ])" "(evil-goto-mark ?^)" "(evil-goto-mark \"?\")"))
(setq extended-command-history '(#("yaml" 0 4 (ivy-index 0)) #("copy" 0 4 (ivy-index 1)) #("^re" 0 3 (ivy-index 0)) #("^rev" 0 4 (ivy-index 0)) #("^" 0 1 (ivy-index 0)) #("^rever" 0 6 (ivy-index 0)) #("^org sa" 0 7 (ivy-index 0)) #("window " 0 7 (ivy-index 1)) #("^space" 0 6 (ivy-index 0)) #("^which key" 0 10 (ivy-index 6)) #("checkbox" 0 8 (ivy-index 0)) #("^su" 0 3 (ivy-index 1)) #("checkbo" 0 7 (ivy-index 0)) #("demot" 0 5 (ivy-index 0)) #("subhea" 0 6 (ivy-index 0)) #("org subh" 0 8 (ivy-index 0)) #("^fil" 0 4 (ivy-index 0)) #("^org save" 0 9 (ivy-index 0)) #("^counsel org" 0 12 (ivy-index 1)) #("^coun" 0 5 (ivy-index 0)) #("^counsel ta" 0 11 (ivy-index 0)) #("^org head" 0 9 (ivy-index 1)) #("^org set t" 0 10 (ivy-index 0)) #("^org insert" 0 11 (ivy-index 0)) #("^org add" 0 8 (ivy-index 3)) #("^fin " 0 5 (ivy-index 2)) #("ft se" 0 5 (ivy-index 0)) #("headings" 0 8 (ivy-index 1)) #("^org sear" 0 9 (ivy-index 0)) #("^ft" 0 3 (ivy-index 0)) #("^fill" 0 5 (ivy-index 0)) #("^ " 0 2 (ivy-index 0)) #("^counsel tag" 0 12 (ivy-index 1)) #("^org set tags" 0 13 (ivy-index 3)) #("org tags" 0 8 (ivy-index 8)) #("^widen" 0 6 (ivy-index 0)) #("counsel org" 0 11 (ivy-index 0)) #("org set tags" 0 12 (ivy-index 2)) #("function" 0 8 (ivy-index 0)) #("^org-get-" 0 9 (ivy-index 0)) #("^crea" 0 5 (ivy-index 0)) #("tags" 0 4 (ivy-index 1)) #("indent sex" 0 10 (ivy-index 0)) #("^inden" 0 6 (ivy-index 3)) #("eval buf" 0 8 (ivy-index 1)) #("eval bu" 0 7 (ivy-index 1)) #("eval buff" 0 9 (ivy-index 1)) #("dired" 0 5 (ivy-index 49)) #("url" 0 3 (ivy-index 3)) #("evil dele" 0 9 (ivy-index 1)) #("eval buffer" 0 11 (ivy-index 1)) #("save buffer" 0 11 (ivy-index 7)) "init.el" #("^sa" 0 3 (ivy-index 0)) #("^ivy b" 0 6 (ivy-index 1)) #("buffer" 0 6 (ivy-index 20)) #("^undo tree" 0 10 (ivy-index 3)) #("^pack ref" 0 9 (ivy-index 0)) #("pa" 0 2 (ivy-index 0)) #("^ag" 0 3 (ivy-index 0)) #("^elma" 0 5 (ivy-index 1)) #("^elm" 0 4 (ivy-index 1)) #("insert mac" 0 10 (ivy-index 0)) #("macro" 0 5 (ivy-index 5)) #("insert macro" 0 12 (ivy-index 0)) #("^find li" 0 8 (ivy-index 0)) #("^kmacro bind" 0 12 (ivy-index 0)) #("^evil-c" 0 7 (ivy-index 0)) #("^kma edi" 0 8 (ivy-index 0)) #("org heading" 0 11 (ivy-index 6)) #("^org heading" 0 12 (ivy-index 3)) #("save or" 0 7 (ivy-index 0)) #("compile" 0 7 (ivy-index 0)) #("theme" 0 5 (ivy-index 0)) #("^counsel pro ag" 0 15 (ivy-index 0)) #("^counsel ag" 0 11 (ivy-index 1)) #("^counsel pro" 0 12 (ivy-index 1)) #("^coun pro" 0 9 (ivy-index 0)) #("^term" 0 5 (ivy-index 0)) #("^oliv" 0 5 (ivy-index 1)) #("^oli" 0 4 (ivy-index 0)) #("rotate" 0 6 (ivy-index 4)) #("^spa" 0 4 (ivy-index 0)) #("^sp" 0 3 (ivy-index 0)) #("^ren" 0 4 (ivy-index 0)) #("^rename" 0 7 (ivy-index 0)) #("^ana" 0 4 (ivy-index 1)) #("^eyebrowse" 0 10 (ivy-index 1)) #("^yaml" 0 5 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) #("^ shell" 0 7 (ivy-index 0)) #("^comint" 0 7 (ivy-index 43)) #("^shel" 0 5 (ivy-index 0)) #("history" 0 7 (ivy-index 1)) #("^org rel" 0 8 (ivy-index 0)) #("^org " 0 5 (ivy-index 2)) #("^l" 0 2 (ivy-index 0)) #("^spac" 0 5 (ivy-index 0)) #("^pack " 0 6 (ivy-index 4)) #("^pac in" 0 7 (ivy-index 0))))
(setq ivy-history '("origin" "*magit-diff: django-base" #("entry" 0 5 (ivy-index 0)) #("nginx" 0 5 (ivy-index 2)) "~/dev/tempo/dispatcher/" #("ng" 0 2 (ivy-index 4)) "6" #("services" 0 8 (ivy-index 66)) "origin" "entrypoint.sh" "entrypoint.sh" "syslog-ng.conf" "nginx.conf" "2" #("ent" 0 3 (ivy-index 0)) "~/dev/tempo/dispatcher/" #("9" 0 1 (ivy-index 0)) "kubernetes_generator.py" #("daemonset" 0 9 (ivy-index 0)) #("daemon" 0 6 (ivy-index 2)) #("templates" 0 9 (ivy-index 14)) #("daem" 0 4 (ivy-index 2)) "realease/confluence/service.py" #("doll" 0 4 (ivy-index 0)) "origin" #("pro" 0 3 (ivy-index 0)) #("resour" 0 6 (ivy-index 1)) #("vali" 0 4 (ivy-index 0)) "local_service.py" #("agen t" 0 6 (ivy-index 0)) #("exc" 0 3 (ivy-index 0)) #("resou" 0 5 (ivy-index 1)) #("main" 0 4 (ivy-index 0)) #("load" 0 4 (ivy-index 0)) "origin" #("con" 0 3 (ivy-index 1)) "origin" #("url" 0 3 (ivy-index 0)) #("gen" 0 3 (ivy-index 0)) "realease/confluence/service.py" #("cond" 0 4 (ivy-index 1)) #("mini" 0 4 (ivy-index 0)) #("agen" 0 4 (ivy-index 0)) #(" 9" 0 2 (ivy-index 0)) #("agent" 0 5 (ivy-index 0)) #("var" 0 3 (ivy-index 0)) #("ma" 0 2 (ivy-index 0)) #("parse" 0 5 (ivy-index 0)) #("dot" 0 3 (ivy-index 0)) "dashboar-deployment.yaml" #("tem" 0 3 (ivy-index 1)) #("fun" 0 3 (ivy-index 0)) #("config" 0 6 (ivy-index 2)) #("org" 0 3 (ivy-index 0)) #("yaml" 0 4 (ivy-index 0)) "tempo_conf.py" "conductor-staging.yaml" #("conf" 0 4 (ivy-index 3)) #("temp" 0 4 (ivy-index 0)) #("yam." 0 4 (ivy-index 0)) "__init__.py" "tempo_conf.py" #("/" 0 1 (ivy-index 4)) #("not" 0 3 (ivy-index 0)) "LICENSE" #("cond " 0 5 (ivy-index 1)) #("par" 0 3 (ivy-index 0)) #("check" 0 5 (ivy-index 0)) "managers/tempo_conf.py" "~/dev/conductor+tempo/tempo_conductor/" "1" #("local" 0 5 (ivy-index 1)) "~/dev/conductor+tempo/conductor/" "~/dev/conductor+tempo/tempo_conductor/" #("inline" 0 6 (ivy-index 0)) #("dash" 0 4 (ivy-index 0)) #("4" 0 1 (ivy-index 0)) "2" #("configur" 0 8 (ivy-index 0)) #("res" 0 3 (ivy-index 1)) "__init__.py" "kubernetes_generator.py" #("get" 0 3 (ivy-index 17)) #("extr" 0 4 (ivy-index 2)) "~/dev/conductor+tempo/tempo_conductor/" #("sche" 0 4 (ivy-index 2)) #("kuber gen" 0 9 (ivy-index 1)) #("mana" 0 4 (ivy-index 0)) "~/dev/conductor+tempo/conductor/" "managers/dashboar_configurator.py" "local_world.yaml" "~/dev/conductor+tempo/tempo_conductor/" "LICENSE" "~/dev/conductor+tempo/conductor/" "~/org/" #("loade" 0 5 (ivy-index 0)) #("belin" 0 5 (ivy-index 0)) #("tem co n" 0 8 (ivy-index 1)) #("varfile" 0 7 (ivy-index 1)) "~/dev/conductor+tempo/conductor/"))
(setq evil-jumps-history '((375 "/home/matt/dev/tempo/django-base/nginx.conf") (377 "/home/matt/dev/tempo/django-base/nginx.conf") (157 "/home/matt/dev/tempo/django-base/docker-entrypoint.sh") (147 "/home/matt/dev/tempo/django-base/docker-entrypoint.sh") (343 "/home/matt/dev/tempo/django-base/nginx.conf") (252 "/home/matt/dev/tempo/django-base/nginx.conf") (1348 "/home/matt/td-agent.conf") (2406 "/home/matt/dev/tempo/dispatcher/nginx.conf") (1248 "/home/matt/dev/tempo/dispatcher/bin/entrypoint.sh")))

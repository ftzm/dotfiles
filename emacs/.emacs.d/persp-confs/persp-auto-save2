;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "emacs_time_func" "/home/matt/emacs_time_func" fundamental-mode) (def-buffer "echo_server.py" "/home/matt/dev/for_tempo/echo_server.py" python-mode) (def-buffer "refile.org" "/home/matt/org/refile.org" org-mode) (def-buffer "config" "/home/matt/dot/polybar/.config/polybar/config" conf-windows-mode) (def-buffer "my_dmenu.sh" "/home/matt/bin/my_dmenu.sh" sh-mode) (def-buffer "ftzm-nginx-flask.yaml" "/home/matt/dev/ftzm-blog-docker/ftzm-blog/ftzm-nginx-flask.yaml" yaml-mode) (def-buffer "persp-auto-save" "/home/matt/dot/emacs/.emacs.d/persp-confs/persp-auto-save" fundamental-mode) (def-buffer "hnefatafl.org" "/home/matt/dev/hnefatafl/hnefatafl.org" org-mode) (def-buffer "TAGS" "/home/matt/dev/hnefatafl/TAGS" tags-table-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1440) (pixel-height . 862) (total-width . 180) (total-height . 50) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 720) (pixel-height . 862) (total-width . 90) (total-height . 50) (normal-height . 1.0) (normal-width . 0.5) (buffer "emacs_time_func" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 208) (start . 1))) (leaf (last . t) (pixel-width . 720) (pixel-height . 862) (total-width . 90) (total-height . 50) (normal-height . 1.0) (normal-width . 0.5) (buffer "*Org Agenda*" (selected) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2383) (start . 1))))) (def-params nil) t nil nil) (def-persp "org" ((def-buffer "tasks.org" "/home/matt/org/tasks.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 102) (min-height-ignore . 2) (min-width-ignore . 102) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 816) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 816) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1440) (pixel-height . 862) (total-width . 180) (total-height . 50) (normal-height . 1.0) (normal-width . 1.0) (buffer "tasks.org" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 50 . 50) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2409) (start . 1)))) (def-params nil) nil nil nil) (def-persp "emacs" ((def-buffer "init.el" "/home/matt/dot/emacs/.emacs.d/init.el" emacs-lisp-mode) (def-buffer ".spacemacs" "/home/matt/dot/spacemacs/.spacemacs" emacs-lisp-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 16) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1440) (pixel-height . 862) (total-width . 180) (total-height . 50) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 919) (start . 1)))) (def-params nil) nil nil nil))